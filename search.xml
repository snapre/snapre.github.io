<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>bobbyCarrot Go</title>
    <url>/2021/02/02/bobbyCarrot/</url>
    <content><![CDATA[<h2 id="（一）游戏制作的背景"><a href="#（一）游戏制作的背景" class="headerlink" title="（一）游戏制作的背景"></a>（一）游戏制作的背景</h2><p>有些经典的游戏在岁月中静躺了多年，每当再次打开的时候，总能给人满满的回忆<br>而且， 历久弥新，先看一张图：<br><img src="/img/oldPhone.jpg" alt=""><br>这是三星曾经一款非常流行的手机-Anycall,在十五多年前谁要是有这么一款手机，那简直太有面了，手机的里面有两款用Java写的游戏，多年后知到java是一门编程语言并学习后才知道为什么java这个字眼这么熟悉原来是因为这款手机里的那两个游戏</p>
<h2 id="（二）在一个不眠之夜"><a href="#（二）在一个不眠之夜" class="headerlink" title="（二）在一个不眠之夜"></a>（二）在一个不眠之夜</h2><p>刚写完java代码的我拖着疲惫的身体上了床，在差点要睡着的时候，一个想法迸射了出来<br><strong>我要把那个兔子游戏(bobby carrot)搬到互联网上，让朋友家人也能够玩到这个15年前的岁月游戏</strong></p>
<h2 id="（三）用一周的时间实现了这个想法"><a href="#（三）用一周的时间实现了这个想法" class="headerlink" title="（三）用一周的时间实现了这个想法"></a>（三）用一周的时间实现了这个想法</h2><p><strong>没错，就是一周，30个关卡，并自己设计制作了Tilemap地图,点击或扫描下面的二维码就可以畅玩</strong></p>
<div align="center">
<a href="https://www.duters-wu.cn/bobbygo">
<img src="/img/bobbygo.png" width="50%" height="50%">
</a>
</div>

<h2 id="（四）就这样"><a href="#（四）就这样" class="headerlink" title="（四）就这样"></a>（四）就这样</h2><p>这样的故事仍在发生！</p>
]]></content>
  </entry>
  <entry>
    <title>CPlusPlus Single LinkedList</title>
    <url>/2021/01/19/cPlusPlusLinkList/</url>
    <content><![CDATA[<h2 id="数据结构之链表-C-实现"><a href="#数据结构之链表-C-实现" class="headerlink" title="数据结构之链表(C++实现)"></a>数据结构之链表(C++实现)</h2><ul>
<li><p>链表表示的是一种数据结构，跟语言没有强相关性</p>
</li>
<li><p>如果我们需要实现一个链表，首先最关键的就是<strong>节点，</strong>一个节点表示链表的一个<strong>数据存储点</strong>，链表是由很多个节点组成的</p>
</li>
<li><p>链表还需要很多线把很多节点串联在一起，<strong>可以用数组的特性串联，也可以用指针串联。</strong></p>
</li>
</ul>
<ul>
<li>代码完整实现</li>
</ul>
<figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-comment">// Node Class</span><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Node</span></span><br><span class="hljs-class">&#123;</span><br><span class="hljs-keyword">public</span>:<br>  T data;<br>  Node&lt;T&gt; *next;<br>&#125;;<br><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LinkList</span></span><br><span class="hljs-class">&#123;</span><br><span class="hljs-keyword">public</span>:<br>  LinkList();<br>  ~LinkList();<br>  <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">CreateLinkList</span><span class="hljs-params">(<span class="hljs-keyword">int</span> size)</span></span>;<br>  <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">DestroyLinkList</span><span class="hljs-params">()</span></span>;<br>  <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">TravalLinkList</span><span class="hljs-params">()</span></span>;<br>  <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">InsertLinkList</span><span class="hljs-params">(Node&lt;T&gt; *data, <span class="hljs-keyword">int</span> n)</span></span>;<br>  <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">DeleteLinkList</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n)</span></span>;<br><br>  <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">GetLength</span><span class="hljs-params">()</span></span>;<br>  <span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">IsEmpty</span><span class="hljs-params">()</span></span>;<br><br>  Node&lt;T&gt; *head; <span class="hljs-comment">// link list head</span><br>  <span class="hljs-keyword">int</span> size;   <span class="hljs-comment">// link list length</span><br>&#125;;<br><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">typename</span> T&gt;<br>LinkList&lt;T&gt;::LinkList()<br>&#123;<br>  head = <span class="hljs-keyword">new</span> Node&lt;T&gt;;<br>  T temp;<br>  head-&gt;data = temp;<br>  head-&gt;next = <span class="hljs-literal">NULL</span>;<br>  size = <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">typename</span> T&gt;<br>LinkList&lt;T&gt;::~LinkList()<br>&#123;<br>  <span class="hljs-keyword">delete</span> head;<br>&#125;<br><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-keyword">int</span> LinkList&lt;T&gt;::CreateLinkList(<span class="hljs-keyword">int</span> n)<br>&#123;<br>  <span class="hljs-keyword">if</span> (n &lt; <span class="hljs-number">0</span>)<br>  &#123;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;error&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>  &#125;<br>  Node&lt;T&gt; *ptemp = <span class="hljs-literal">NULL</span>;<br>  Node&lt;T&gt; *pnew = <span class="hljs-literal">NULL</span>;<br><br>  <span class="hljs-keyword">this</span>-&gt;size = n;<br>  ptemp = <span class="hljs-keyword">this</span>-&gt;head;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>  &#123;<br>    pnew = <span class="hljs-keyword">new</span> Node&lt;T&gt;;<br>    pnew-&gt;next = <span class="hljs-literal">NULL</span>;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;Please input the &quot;</span> &lt;&lt; i + <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-string">&quot;th node value&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    <span class="hljs-built_in">cin</span> &gt;&gt; pnew-&gt;data;<br>    ptemp-&gt;next = pnew;<br>    ptemp = pnew;<br>  &#125;<br>  <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;linkedList create ok&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-keyword">int</span> LinkList&lt;T&gt;::DestroyLinkList()<br>&#123;<br>  Node&lt;T&gt; *ptemp;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>-&gt;head == <span class="hljs-literal">NULL</span>)<br>  &#123;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;linkedList is empty&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>  &#125;<br>  <span class="hljs-keyword">while</span> (<span class="hljs-keyword">this</span>-&gt;head)<br>  &#123;<br>    ptemp = head-&gt;next;<br>    <span class="hljs-built_in">free</span>(head);<br>    head = ptemp;<br>  &#125;<br>  <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;destroy linkedList ok&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-keyword">int</span> LinkList&lt;T&gt;::TravalLinkList()<br>&#123;<br>  Node&lt;T&gt; *ptemp = <span class="hljs-keyword">this</span>-&gt;head-&gt;next;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>-&gt;head == <span class="hljs-literal">NULL</span>)<br>  &#123;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;link list is empty&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>  &#125;<br>  <span class="hljs-keyword">while</span> (ptemp)<br>  &#123;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; ptemp-&gt;data &lt;&lt; <span class="hljs-string">&quot;-&gt;&quot;</span>;<br>    ptemp = ptemp-&gt;next;<br>  &#125;<br>  <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;NULL&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-keyword">int</span> LinkList&lt;T&gt;::InsertLinkList(Node&lt;T&gt; *data, <span class="hljs-keyword">int</span> n)<br>&#123;<br>  Node&lt;T&gt; *ptemp;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>-&gt;head == <span class="hljs-literal">NULL</span>)<br>  &#123;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;link list is empty&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>  &#125;<br>  <span class="hljs-keyword">if</span> (data == <span class="hljs-literal">NULL</span>)<br>  &#123;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;insert node is empty&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>  &#125;<br>  <span class="hljs-comment">// header insert</span><br>  <span class="hljs-keyword">if</span> (n &lt; <span class="hljs-number">2</span>)<br>  &#123;<br>    Node&lt;T&gt; *pnew = <span class="hljs-keyword">new</span> Node&lt;T&gt;;<br>    pnew-&gt;data = data-&gt;data;<br>    pnew-&gt;next = <span class="hljs-keyword">this</span>-&gt;head-&gt;next;<br>    <span class="hljs-keyword">this</span>-&gt;head-&gt;next = pnew;<br>    <span class="hljs-keyword">this</span>-&gt;size++;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>  &#125;<br>  <span class="hljs-comment">// tail insert</span><br>  <span class="hljs-keyword">if</span> (n &gt; <span class="hljs-keyword">this</span>-&gt;size)<br>  &#123;<br>    ptemp = <span class="hljs-keyword">this</span>-&gt;head;<br>    <span class="hljs-keyword">while</span> (ptemp-&gt;next != <span class="hljs-literal">NULL</span>)<br>    &#123;<br>      ptemp = ptemp-&gt;next;<br>    &#125;<br>    Node&lt;T&gt; *pnew = <span class="hljs-keyword">new</span> Node&lt;T&gt;;<br>    pnew-&gt;data = data-&gt;data;<br>    pnew-&gt;next = <span class="hljs-literal">NULL</span>;<br>    ptemp-&gt;next = pnew;<br>    <span class="hljs-keyword">this</span>-&gt;size++;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>  &#125;<br>  <span class="hljs-comment">// middle insert</span><br>  <span class="hljs-keyword">else</span><br>  &#123;<br>    ptemp = <span class="hljs-keyword">this</span>-&gt;head;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; n; i++)<br>    &#123;<br>      ptemp = ptemp-&gt;next;<br>    &#125;<br>    Node&lt;T&gt; *pnew = <span class="hljs-keyword">new</span> Node&lt;T&gt;;<br>    pnew-&gt;data = data-&gt;data;<br>    pnew-&gt;next = ptemp-&gt;next;<br>    ptemp-&gt;next = pnew;<br>    <span class="hljs-keyword">this</span>-&gt;size++;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-keyword">int</span> LinkList&lt;T&gt;::DeleteLinkList(<span class="hljs-keyword">int</span> n)<br>&#123;<br>  Node&lt;T&gt; *ptemp;<br>  Node&lt;T&gt; *ptemp2;<br>  <span class="hljs-keyword">if</span> (n &gt; <span class="hljs-keyword">this</span>-&gt;size)<br>  &#123;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;n too big&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>  &#125;<br>  <span class="hljs-comment">// delete head node</span><br>  <span class="hljs-keyword">if</span> (n &lt; <span class="hljs-number">2</span>)<br>  &#123;<br>    ptemp = <span class="hljs-keyword">this</span>-&gt;head-&gt;next;<br>    <span class="hljs-keyword">this</span>-&gt;head-&gt;next = ptemp-&gt;next;<br>    <span class="hljs-built_in">free</span>(ptemp);<br>    <span class="hljs-keyword">this</span>-&gt;size--;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>  &#125;<br>  <span class="hljs-comment">// tail delete</span><br>  <span class="hljs-keyword">if</span> (n == <span class="hljs-keyword">this</span>-&gt;size)<br>  &#123;<br>    ptemp = <span class="hljs-keyword">this</span>-&gt;head;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; <span class="hljs-keyword">this</span>-&gt;size; i++)<br>    &#123;<br>      ptemp = ptemp-&gt;next;<br>    &#125;<br>    ptemp2 = ptemp-&gt;next;<br>    ptemp-&gt;next = ptemp2-&gt;next;<br>    <span class="hljs-built_in">free</span>(ptemp2);<br>    <span class="hljs-keyword">this</span>-&gt;size--;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>  &#125;<br>  <span class="hljs-comment">// middle delete</span><br>  <span class="hljs-keyword">else</span><br>  &#123;<br>    ptemp = <span class="hljs-keyword">this</span>-&gt;head;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; n; i++)<br>    &#123;<br>      ptemp = ptemp-&gt;next;<br>    &#125;<br>    ptemp2 = ptemp-&gt;next;<br>    ptemp-&gt;next = ptemp2-&gt;next;<br>    <span class="hljs-built_in">free</span>(ptemp2);<br>    <span class="hljs-keyword">this</span>-&gt;size--;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-keyword">int</span> LinkList&lt;T&gt;::GetLength()<br>&#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>-&gt;size;<br>&#125;<br><br><span class="hljs-keyword">template</span>&lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-keyword">bool</span> LinkList&lt;T&gt;::IsEmpty()<br>&#123;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span>-&gt;head == <span class="hljs-literal">NULL</span>)<br>  &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>  &#125;<br>  <span class="hljs-keyword">else</span><br>  &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>  &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;Hello World!\n&quot;</span>;<br>  LinkList&lt;<span class="hljs-built_in">string</span>&gt; <span class="hljs-built_in">list</span>;<br>  LinkList&lt;<span class="hljs-built_in">string</span>&gt; *plist = &amp;<span class="hljs-built_in">list</span>;<br>  <span class="hljs-keyword">int</span> linkListLength;<br>  <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;Please input linkedList length: &quot;</span>;<br>  <span class="hljs-built_in">cin</span> &gt;&gt; linkListLength;<br>  plist-&gt;CreateLinkList(linkListLength);<br>  plist-&gt;TravalLinkList();<br><br>  Node&lt;<span class="hljs-built_in">string</span>&gt; temp;<br>  temp.data = <span class="hljs-string">&quot;Hello&quot;</span>;<br>  temp.next = <span class="hljs-literal">NULL</span>;<br><br>  plist-&gt;InsertLinkList(&amp;temp, <span class="hljs-number">0</span>);<br>  plist-&gt;TravalLinkList();<br><br>  plist-&gt;InsertLinkList(&amp;temp, plist-&gt;GetLength() + <span class="hljs-number">1</span>);<br>  plist-&gt;TravalLinkList();<br><br>  plist-&gt;InsertLinkList(&amp;temp, <span class="hljs-number">3</span>);<br>  plist-&gt;TravalLinkList();<br><br>  plist-&gt;DeleteLinkList(<span class="hljs-number">0</span>);<br>  plist-&gt;TravalLinkList();<br><br>  plist-&gt;DeleteLinkList(<span class="hljs-number">4</span>);<br>  plist-&gt;TravalLinkList();<br><br>  plist-&gt;DestroyLinkList();<br>  system(<span class="hljs-string">&quot;pause&quot;</span>);<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>
<ul>
<li>效果</li>
</ul>
<p><img src="/img/linklist.png" alt="image"></p>
]]></content>
      <categories>
        <category>C++</category>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>C++链表</tag>
      </tags>
  </entry>
  <entry>
    <title>C Plus Plus</title>
    <url>/2021/02/03/cpp1/</url>
    <content><![CDATA[<h1 id="C-的泛型程序设计思想"><a href="#C-的泛型程序设计思想" class="headerlink" title="C++ 的泛型程序设计思想"></a>C++ 的泛型程序设计思想</h1><ul>
<li>C++ 语言的核心优势之一就是便于软件的重用</li>
<li><p>C++中有两个方面体现重用：</p>
<ol>
<li>面向对象的思想：继承和多态，标准类库</li>
<li>泛型程序设计(generic programming) 的思想： 模板机<br>制，以及标准模板库 STL</li>
</ol>
<p>先看一段代码：</p>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;list&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iterator&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;deque&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-built_in">string</span> string_hello = <span class="hljs-string">&quot;Hello&quot;</span>;<br>  string_hello += string_hello;<br>  <span class="hljs-built_in">list</span>&lt;<span class="hljs-keyword">int</span>&gt; list_hello;<br>  list_hello.push_front(<span class="hljs-number">100</span>);<br>  list_hello.push_back(<span class="hljs-number">200</span>);<br>  <span class="hljs-built_in">list</span>&lt;<span class="hljs-keyword">int</span>&gt;::const_iterator point;<br>  <span class="hljs-keyword">for</span>(point = list_hello.begin(); point != list_hello.end(); point++)<br>    <span class="hljs-built_in">cout</span> &lt;&lt; *point &lt;&lt; <span class="hljs-built_in">endl</span>;<br>  <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; vec;<br>  vec.push_back(<span class="hljs-number">23</span>);<br>  vec.push_back(<span class="hljs-number">89</span>);<br>  vec.push_back(<span class="hljs-number">123</span>);<br>  vec.push_back(<span class="hljs-number">333</span>);<br>  <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;::iterator p;<br>  vec.reserve(<span class="hljs-number">1000</span>);<br>  p = find(vec.begin(), vec.end(), <span class="hljs-number">333</span>);<br>  <span class="hljs-keyword">if</span> (p != vec.end())<br>    <span class="hljs-built_in">cout</span> &lt;&lt; vec.size() &lt;&lt;<span class="hljs-built_in">endl</span> &lt;&lt; vec.capacity() &lt;&lt; <span class="hljs-built_in">endl</span>;<br>  <span class="hljs-keyword">if</span> (!vec.empty()) &#123;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;Vector is not empty&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>  &#125;<br>  vec.resize(<span class="hljs-number">2000</span>);<br>  <span class="hljs-built_in">cout</span> &lt;&lt; vec.capacity() &lt;&lt; <span class="hljs-built_in">endl</span>;<br>  <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; arrays&#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>&#125;;<br>  <span class="hljs-function">ostream_iterator&lt;<span class="hljs-keyword">int</span>&gt; <span class="hljs-title">it</span><span class="hljs-params">(<span class="hljs-built_in">cout</span>, <span class="hljs-string">&quot; &quot;</span>)</span></span>;<br>  copy(arrays.begin(), arrays.end(), it);<br>  <span class="hljs-built_in">deque</span>&lt;<span class="hljs-keyword">int</span>&gt; deq1&#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>&#125;;<br>  <span class="hljs-function">ostream_iterator&lt;<span class="hljs-keyword">int</span>&gt; <span class="hljs-title">its</span><span class="hljs-params">(<span class="hljs-built_in">cout</span>, <span class="hljs-string">&quot; &quot;</span>)</span></span>;<br>  copy(deq1.begin(), deq1.end(), its);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>Vector</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ double linked list demo</title>
    <url>/2021/03/28/double-linklist/</url>
    <content><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-comment">/* linkedlistdemo.cpp */</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;random&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-comment">/* The console outputs color control */</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> RESET <span class="hljs-meta-string">&quot;\033[0m&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BLACK <span class="hljs-meta-string">&quot;\033[30m&quot;</span>              <span class="hljs-comment">/* Black */</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> RED <span class="hljs-meta-string">&quot;\033[31m&quot;</span>                <span class="hljs-comment">/* Red */</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> GREEN <span class="hljs-meta-string">&quot;\033[32m&quot;</span>              <span class="hljs-comment">/* Green */</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> YELLOW <span class="hljs-meta-string">&quot;\033[33m&quot;</span>             <span class="hljs-comment">/* Yellow */</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BLUE <span class="hljs-meta-string">&quot;\033[34m&quot;</span>               <span class="hljs-comment">/* Blue */</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> MAGENTA <span class="hljs-meta-string">&quot;\033[35m&quot;</span>            <span class="hljs-comment">/* Magenta */</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> CYAN <span class="hljs-meta-string">&quot;\033[36m&quot;</span>               <span class="hljs-comment">/* Cyan */</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> WHITE <span class="hljs-meta-string">&quot;\033[37m&quot;</span>              <span class="hljs-comment">/* White */</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BOLDBLACK <span class="hljs-meta-string">&quot;\033[1m\033[30m&quot;</span>   <span class="hljs-comment">/* Bold Black */</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BOLDRED <span class="hljs-meta-string">&quot;\033[1m\033[31m&quot;</span>     <span class="hljs-comment">/* Bold Red */</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BOLDGREEN <span class="hljs-meta-string">&quot;\033[1m\033[32m&quot;</span>   <span class="hljs-comment">/* Bold Green */</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BOLDYELLOW <span class="hljs-meta-string">&quot;\033[1m\033[33m&quot;</span>  <span class="hljs-comment">/* Bold Yellow */</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BOLDBLUE <span class="hljs-meta-string">&quot;\033[1m\033[34m&quot;</span>    <span class="hljs-comment">/* Bold Blue */</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BOLDMAGENTA <span class="hljs-meta-string">&quot;\033[1m\033[35m&quot;</span> <span class="hljs-comment">/* Bold Magenta */</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BOLDCYAN <span class="hljs-meta-string">&quot;\033[1m\033[36m&quot;</span>    <span class="hljs-comment">/* Bold Cyan */</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BOLDWHITE <span class="hljs-meta-string">&quot;\033[1m\033[37m&quot;</span>   <span class="hljs-comment">/* Bold White */</span></span><br><br><span class="hljs-comment">/* LinkedList Node */</span><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Node</span></span><br><span class="hljs-class">&#123;</span><br><span class="hljs-keyword">private</span>:<br>    T data;<br>    Node&lt;T&gt; *prev;<br>    Node&lt;T&gt; *next;<br><br><span class="hljs-keyword">public</span>:<br>    Node(T data);<br>    ~Node();<br>    <span class="hljs-function">T <span class="hljs-title">get_data</span><span class="hljs-params">()</span></span>;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">set_data</span><span class="hljs-params">(T data)</span></span>;<br>    <span class="hljs-function">Node&lt;T&gt; *<span class="hljs-title">get_prev</span><span class="hljs-params">()</span></span>;<br>    <span class="hljs-function">Node&lt;T&gt; *<span class="hljs-title">get_next</span><span class="hljs-params">()</span></span>;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">set_prev</span><span class="hljs-params">(Node&lt;T&gt; *prev)</span></span>;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">set_next</span><span class="hljs-params">(Node&lt;T&gt; *next)</span></span>;<br>    <span class="hljs-keyword">friend</span> ostream &amp;<span class="hljs-keyword">operator</span>&lt;&lt;(ostream &amp;output, Node&lt;T&gt; &amp;N)<br>    &#123;<br>        output &lt;&lt; <span class="hljs-string">&quot;&#123; *prev: &quot;</span> &lt;&lt; N.get_prev() &lt;&lt; <span class="hljs-string">&quot;, data: &quot;</span> &lt;&lt; N.get_data() &lt;&lt; <span class="hljs-string">&quot;, *next: &quot;</span> &lt;&lt; N.get_next() &lt;&lt; <span class="hljs-string">&quot; &#125;&quot;</span>;<br>        <span class="hljs-keyword">return</span> output;<br>    &#125;<br>&#125;;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br>Node&lt;T&gt;::Node(T data)<br>&#123;<br>    <span class="hljs-keyword">this</span>-&gt;data = data;<br>    prev = <span class="hljs-literal">NULL</span>;<br>    next = <span class="hljs-literal">NULL</span>;<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br>Node&lt;T&gt;::~Node()<br>&#123;<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br>T Node&lt;T&gt;::get_data()<br>&#123;<br>    <span class="hljs-keyword">return</span> data;<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-keyword">void</span> Node&lt;T&gt;::set_data(T data)<br>&#123;<br>    <span class="hljs-keyword">this</span>-&gt;data = data;<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br>Node&lt;T&gt; *Node&lt;T&gt;::get_prev()<br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>-&gt;prev;<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br>Node&lt;T&gt; *Node&lt;T&gt;::get_next()<br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>-&gt;next;<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-keyword">void</span> Node&lt;T&gt;::set_prev(Node&lt;T&gt; *prev)<br>&#123;<br>    <span class="hljs-keyword">this</span>-&gt;prev = prev;<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-keyword">void</span> Node&lt;T&gt;::set_next(Node&lt;T&gt; *next)<br>&#123;<br>    <span class="hljs-keyword">this</span>-&gt;next = next;<br>&#125;<br><br><span class="hljs-comment">/* LinkedList By Node&lt;T&gt; */</span><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LinkedList</span></span><br><span class="hljs-class">&#123;</span><br><span class="hljs-keyword">private</span>:<br>    Node&lt;T&gt; *head;<br>    Node&lt;T&gt; *tail;<br>    <span class="hljs-keyword">int</span> length;<br><br><span class="hljs-keyword">public</span>:<br>    LinkedList();<br>    ~LinkedList();<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">add_front</span><span class="hljs-params">(T data)</span></span>;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">add_back</span><span class="hljs-params">(T data)</span></span>;<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">size</span><span class="hljs-params">()</span></span>;<br>    <span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">is_empty</span><span class="hljs-params">()</span></span>;<br>    <span class="hljs-function">T <span class="hljs-title">remove_front</span><span class="hljs-params">()</span></span>;<br>    <span class="hljs-function">T <span class="hljs-title">remove_back</span><span class="hljs-params">()</span></span>;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">front_to_back</span><span class="hljs-params">()</span></span>;<br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">back_to_front</span><span class="hljs-params">()</span></span>;<br>&#125;;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br>LinkedList&lt;T&gt;::LinkedList()<br>&#123;<br>    <span class="hljs-keyword">this</span>-&gt;head = <span class="hljs-literal">NULL</span>;<br>    <span class="hljs-keyword">this</span>-&gt;tail = <span class="hljs-literal">NULL</span>;<br>    <span class="hljs-keyword">this</span>-&gt;length = <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br>LinkedList&lt;T&gt;::~LinkedList()<br>&#123;<br>    Node&lt;T&gt; *cur;<br>    <span class="hljs-keyword">while</span> (head)<br>    &#123;<br>        cur = head-&gt;get_next();<br>        <span class="hljs-built_in">free</span>(head);<br>        head = cur;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-keyword">void</span> LinkedList&lt;T&gt;::add_front(T data)<br>&#123;<br>    Node&lt;T&gt; *new_node = <span class="hljs-keyword">new</span> Node&lt;T&gt;(data);<br>    <span class="hljs-keyword">if</span> (tail == <span class="hljs-literal">NULL</span>)<br>    &#123;<br>        tail = new_node;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        new_node-&gt;set_prev(<span class="hljs-literal">NULL</span>);<br>        head-&gt;set_prev(new_node);<br>        new_node-&gt;set_next(head);<br>    &#125;<br>    head = new_node;<br>    length++;<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-keyword">void</span> LinkedList&lt;T&gt;::add_back(T data)<br>&#123;<br>    Node&lt;T&gt; *new_node = <span class="hljs-keyword">new</span> Node&lt;T&gt;(data);<br>    <span class="hljs-keyword">if</span> (head == <span class="hljs-literal">NULL</span>)<br>    &#123;<br>        head = new_node;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        new_node-&gt;set_next(<span class="hljs-literal">NULL</span>);<br>        new_node-&gt;set_prev(tail);<br>        tail-&gt;set_next(new_node);<br>    &#125;<br>    tail = new_node;<br>    length++;<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-keyword">int</span> LinkedList&lt;T&gt;::size()<br>&#123;<br>    <span class="hljs-keyword">return</span> length;<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-keyword">bool</span> LinkedList&lt;T&gt;::is_empty()<br>&#123;<br>    <span class="hljs-keyword">return</span> head == <span class="hljs-literal">NULL</span> ? <span class="hljs-literal">true</span> : <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br>T LinkedList&lt;T&gt;::remove_front()<br>&#123;<br>    Node&lt;T&gt; *cur = head;<br>    T data = cur-&gt;get_data();<br>    head = head-&gt;get_next();<br>    <span class="hljs-built_in">free</span>(cur);<br>    head-&gt;set_prev(<span class="hljs-literal">NULL</span>);<br>    length--;<br>    <span class="hljs-keyword">return</span> data;<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br>T LinkedList&lt;T&gt;::remove_back()<br>&#123;<br>    Node&lt;T&gt; *cur = tail;<br>    T data = cur-&gt;get_data();<br>    tail = cur-&gt;get_prev();<br>    <span class="hljs-built_in">free</span>(cur);<br>    tail-&gt;set_next(<span class="hljs-literal">NULL</span>);<br>    length--;<br>    <span class="hljs-keyword">return</span> data;<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-keyword">void</span> LinkedList&lt;T&gt;::front_to_back()<br>&#123;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;[&quot;</span>;<br>    Node&lt;T&gt; *cur = head;<br>    <span class="hljs-keyword">while</span> (cur != <span class="hljs-literal">NULL</span>)<br>    &#123;<br>        <span class="hljs-built_in">cout</span> &lt;&lt; *cur &lt;&lt; RED &lt;&lt; <span class="hljs-string">&quot; &lt;===&gt; &quot;</span> &lt;&lt; RESET;<br>        cur = cur-&gt;get_next();<br>    &#125;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot; NULL]\n\n&quot;</span>;<br>&#125;<br><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-keyword">void</span> LinkedList&lt;T&gt;::back_to_front()<br>&#123;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;[&quot;</span>;<br>    Node&lt;T&gt; *cur = tail;<br>    <span class="hljs-keyword">while</span> (cur != <span class="hljs-literal">NULL</span>)<br>    &#123;<br>        <span class="hljs-built_in">cout</span> &lt;&lt; *cur &lt;&lt; RED &lt;&lt; <span class="hljs-string">&quot; &lt;===&gt; &quot;</span> &lt;&lt; RESET;<br>        cur = cur-&gt;get_prev();<br>    &#125;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot; NULL]\n\n&quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;Hello World !&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br><br>    <span class="hljs-comment">// LinkedList by self !</span><br>    LinkedList&lt;<span class="hljs-keyword">int</span>&gt; linklist = LinkedList&lt;<span class="hljs-keyword">int</span>&gt;();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++)<br>    &#123;<br>        linklist.add_back(i * i);<br>    &#125;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; linklist.size() &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; linklist.is_empty() &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    linklist.front_to_back();<br>    linklist.back_to_front();<br>    <span class="hljs-built_in">cout</span> &lt;&lt; linklist.remove_back() &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; linklist.remove_front() &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    linklist.front_to_back();<br>    linklist.add_front(<span class="hljs-number">100</span>);<br>    linklist.front_to_back();<br>    <span class="hljs-built_in">cout</span> &lt;&lt; linklist.size() &lt;&lt; <span class="hljs-built_in">endl</span>;<br><br>    <span class="hljs-comment">// vector by STL</span><br>    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; vt;<br>    default_random_engine e;<br>    <span class="hljs-function">uniform_int_distribution&lt;<span class="hljs-keyword">unsigned</span>&gt; <span class="hljs-title">u</span><span class="hljs-params">(<span class="hljs-number">0</span>, <span class="hljs-number">100</span>)</span></span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++)<br>    &#123;<br>        vt.push_back(u(e));<br>    &#125;<br>    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;::iterator v_pointer = vt.begin();<br>    <span class="hljs-keyword">while</span> (v_pointer != vt.end())<br>    &#123;<br>        <span class="hljs-built_in">cout</span> &lt;&lt; *v_pointer &lt;&lt; <span class="hljs-string">&quot; &quot;</span>;<br>        v_pointer++;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">$</span><span class="bash"> g++ linkedlistdemo.cpp</span><br><span class="hljs-meta">$</span><span class="bash"> ./a.exe</span><br>[&#123; *prev: 0, data: 0, *next: 0xf09868 &#125; &lt;===&gt; &#123; *prev: 0xf09fc0, data: 1, *next: 0xf09880 &#125; &lt;===&gt; &#123; *prev: 0xf09868, data: 4, *next: 0xf09898 &#125; &lt;<br>===&gt; &#123; *prev: 0xf09880, data: 9, *next: 0xf098b0 &#125; &lt;===&gt; &#123; *prev: 0xf09898, data: 16, *next: 0xf098c8 &#125; &lt;===&gt; &#123; *prev: 0xf098b0, data: 25, *next: <br>0xf098e0 &#125; &lt;===&gt; &#123; *prev: 0xf098c8, data: 36, *next: 0xf098f8 &#125; &lt;===&gt; &#123; *prev: 0xf098e0, data: 49, *next: 0xf09910 &#125; &lt;===&gt; &#123; *prev: 0xf098f8,<br> data: 64, *next: 0xf09928 &#125; &lt;===&gt; &#123; *prev: 0xf09910, data: 81, *next: 0 &#125; &lt;===&gt;  NULL]<br><br>[&#123; *prev: 0, data: 100, *next: 0xf09868 &#125; &lt;===&gt; &#123; *prev: 0xf09fc0, data: 1, *next: 0xf09880 &#125; &lt;===&gt; &#123; *prev: 0xf09868, data: 4, *next: 0xf09898 &#125;<br> &lt;===&gt; &#123; *prev: 0xf09880, data: 9, *next: 0xf098b0 &#125; &lt;===&gt; &#123; *prev: 0xf09898, data: 16, *next: 0xf098c8 &#125; &lt;===&gt; &#123; *prev: 0xf098b0, data: 25, *next<br>: 0xf098e0 &#125; &lt;===&gt; &#123; *prev: 0xf098c8, data: 36, *next: 0xf098f8 &#125; &lt;===&gt; &#123; *prev: 0xf098e0, data: 49, *next: 0xf09910 &#125; &lt;===&gt; &#123; *prev: 0xf098f<br>8, data: 64, *next: 0 &#125; &lt;===&gt;  NULL]<br></code></pre></div></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>LinkedList</tag>
      </tags>
  </entry>
  <entry>
    <title>Python learning</title>
    <url>/2020/12/17/first-blog/</url>
    <content><![CDATA[<ul>
<li>python可以用来帮助我们做很多事情，比如说帮我们通过两张50*50的小图片随机生成一张好看的游戏地图</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> csv<br><span class="hljs-keyword">from</span> typing <span class="hljs-keyword">import</span> Tuple, List<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> os<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">csv_read</span>(<span class="hljs-params">csv_name</span>):</span><br>    map_mat: List[List] = <span class="hljs-built_in">list</span>()<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(csv_name)<span class="hljs-keyword">as</span> f:<br>        f_csv = csv.reader(f)<br>        <span class="hljs-keyword">for</span> row <span class="hljs-keyword">in</span> f_csv:<br>            map_mat.append(<span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-keyword">lambda</span> item: <span class="hljs-built_in">int</span>(item), row)))<br>    <span class="hljs-keyword">return</span> map_mat<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>() -&gt; <span class="hljs-keyword">None</span>:</span><br>    image_grass_list = <span class="hljs-built_in">list</span>()<br>    bg_name_list = os.listdir(<span class="hljs-string">&quot;./newS/bg&quot;</span>)<br>    image_soil_list = <span class="hljs-built_in">list</span>()<br>    soil_name_list = os.listdir(<span class="hljs-string">&quot;./newS/soil&quot;</span>)<br>    <span class="hljs-keyword">for</span> bg_name <span class="hljs-keyword">in</span> bg_name_list:<br>        image_grass_list.append(cv2.imread(<span class="hljs-string">&quot;./newS/bg/&quot;</span> + bg_name))<br>    <span class="hljs-keyword">for</span> soil_name <span class="hljs-keyword">in</span> soil_name_list:<br>        image_soil_list.append(cv2.imread(<span class="hljs-string">&quot;./newS/soil/&quot;</span> + soil_name))<br>    print(soil_name_list)<br>    csv_name_list = os.listdir(<span class="hljs-string">&quot;./mapCSVTemp&quot;</span>)<br><br>    <span class="hljs-comment"># sorted(csv_name_list, key=lambda item: int(item[3:-4]))</span><br>    <span class="hljs-keyword">for</span> csv_name <span class="hljs-keyword">in</span> csv_name_list:<br>        map_mat = np.array(csv_read(<span class="hljs-string">&quot;./mapCSVTemp/&quot;</span> + csv_name))<br>        height, width = map_mat.shape<br>        <span class="hljs-built_in">map</span> = np.zeros((height*<span class="hljs-number">50</span>, width*<span class="hljs-number">50</span>, <span class="hljs-number">3</span>), dtype=<span class="hljs-built_in">int</span>)<br>        <span class="hljs-keyword">for</span> i, row <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(map_mat):<br>            <span class="hljs-keyword">for</span> j, sign <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(row):<br>                <span class="hljs-keyword">if</span> sign:<br>                    soil_sign = random.randint(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(soil_name_list)-<span class="hljs-number">1</span>)<br>                    <span class="hljs-built_in">map</span>[i*<span class="hljs-number">50</span>:(i*<span class="hljs-number">50</span>+<span class="hljs-number">50</span>), j*<span class="hljs-number">50</span>:(j*<span class="hljs-number">50</span> + <span class="hljs-number">50</span>)<br>                        ] = image_soil_list[soil_sign]<br>                <span class="hljs-keyword">else</span>:<br>                    bg_sign = random.randint(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(bg_name_list)-<span class="hljs-number">1</span>)<br>                    <span class="hljs-built_in">map</span>[i*<span class="hljs-number">50</span>:(i*<span class="hljs-number">50</span>+<span class="hljs-number">50</span>), j*<span class="hljs-number">50</span>:(j*<span class="hljs-number">50</span> + <span class="hljs-number">50</span>)<br>                        ] = image_grass_list[bg_sign]<br>        cv2.imwrite(<span class="hljs-string">&#x27;./mapTemp/&#x27;</span> + <span class="hljs-string">&quot;map30.png&quot;</span>,<br>                    <span class="hljs-built_in">map</span>, [<span class="hljs-built_in">int</span>(cv2.IMWRITE_PNG_COMPRESSION), <span class="hljs-number">9</span>])<br>    print(<span class="hljs-string">&quot;Map Ready Ok !&quot;</span>)<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    main()<br></code></pre></div></td></tr></table></figure>]]></content>
      <tags>
        <tag>python</tag>
        <tag>cv2</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/12/17/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></div></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo server<br></code></pre></div></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo generate<br></code></pre></div></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></div></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>How to use javap?</title>
    <url>/2021/01/22/java/</url>
    <content><![CDATA[<h2 id="Javap-Use"><a href="#Javap-Use" class="headerlink" title="Javap Use"></a>Javap Use</h2><p>javap 是JDK自带的反汇编器，可以查看java编译器为我们生成的字节码。<br>语法：</p>
<ul>
<li>javap [ 命令选项 ] class. . .</li>
<li>javap 命令用于解析类文件。其输出取决于所用的选项</li>
</ul>
<p>命令选项</p>
<ul>
<li>-help 输出 javap 的帮助信息。</li>
<li>-l 输出行及局部变量表。</li>
<li>-b 确保与 JDK 1.1 javap 的向后兼容性。</li>
<li>-public 只显示 public 类及成员。</li>
<li>-protected 只显示 protected 和 public 类及成员。</li>
<li>-package 只显示包、protected 和 public 类及成员。这是缺省设置。</li>
<li>-private 显示所有类和成员。</li>
<li>-J[flag] 直接将 flag 传给运行时系统。</li>
<li>-s 输出内部类型签名。</li>
<li>-c 输出类中各方法的未解析的代码，即构成 Java 字节码的指令。</li>
<li>-verbose 输出堆栈大小、各方法的 locals 及 args 数,以及class文件的编译版本</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">javac javaFile.java<br>javap -c javaFile<br></code></pre></div></td></tr></table></figure>
<p>反汇编成java字节码<br><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java">Compiled from <span class="hljs-string">&quot;Main.java&quot;</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Main</span><span class="hljs-params">()</span></span>;<br>    Code:<br>       <span class="hljs-number">0</span>: aload_0<br>       1: invokespecial #1                  // Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V<br>       <span class="hljs-number">4</span>: <span class="hljs-keyword">return</span><br><br>  <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(java.lang.String[])</span></span>;<br>    Code:<br>       0: new           #7                  // class java/util/ArrayList<br>       <span class="hljs-number">3</span>: dup<br>       4: invokespecial #9                  // Method java/util/ArrayList.&quot;&lt;init&gt;&quot;:()V<br>       <span class="hljs-number">7</span>: astore_1<br>       <span class="hljs-number">8</span>: aload_1<br>       9: ldc           #10                 // String Google<br>      11: invokevirtual #12                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z<br>      <span class="hljs-number">14</span>: pop<br>      <span class="hljs-number">15</span>: aload_1<br>      16: ldc           #16                 // String Runoob<br>      18: invokevirtual #12                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z<br>      <span class="hljs-number">21</span>: pop<br>      <span class="hljs-number">22</span>: aload_1<br>      23: ldc           #18                 // String Taobao<br>      25: invokevirtual #12                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z<br>      <span class="hljs-number">28</span>: pop<br>      <span class="hljs-number">29</span>: aload_1<br>      30: ldc           #20                 // String Weibo<br>      32: invokevirtual #12                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z<br>      <span class="hljs-number">35</span>: pop<br>      36: new           #22                 // class test/Person<br>      <span class="hljs-number">39</span>: dup<br>      40: ldc           #24                 // String wuxiang<br>      42: ldc           #26                 // String male<br>      <span class="hljs-number">44</span>: aload_1<br>      45: invokespecial #28                 // Method test/Person.&quot;&lt;init&gt;&quot;:(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V<br>      <span class="hljs-number">48</span>: astore_2<br>      49: getstatic     #31                 // Field java/lang/System.out:Ljava/io/PrintStream;<br>      <span class="hljs-number">52</span>: aload_2<br>      53: invokevirtual #37                 // Method java/io/PrintStream.println:(Ljava/lang/Object;)V<br>      56: new           #43                 // class java/lang/String<br>      <span class="hljs-number">59</span>: dup<br>      60: ldc           #45                 // String temp1<br>      62: invokespecial #47                 // Method java/lang/String.&quot;&lt;init&gt;&quot;:(Ljava/lang/String;)V<br>      <span class="hljs-number">65</span>: astore_3<br>      66: ldc           #45                 // String temp1<br>      <span class="hljs-number">68</span>: astore        <span class="hljs-number">4</span><br>      70: getstatic     #31                 // Field java/lang/System.out:Ljava/io/PrintStream;<br>      <span class="hljs-number">73</span>: aload_3<br>      <span class="hljs-number">74</span>: aload         <span class="hljs-number">4</span><br>      <span class="hljs-number">76</span>: if_acmpne     <span class="hljs-number">83</span><br>      <span class="hljs-number">79</span>: iconst_1<br>      <span class="hljs-number">80</span>: goto          <span class="hljs-number">84</span><br>      <span class="hljs-number">83</span>: iconst_0<br>      84: invokevirtual #50                 // Method java/io/PrintStream.println:(Z)V<br>      87: getstatic     #31                 // Field java/lang/System.out:Ljava/io/PrintStream;<br>      <span class="hljs-number">90</span>: aload_3<br>      91: invokevirtual #53                 // Method java/lang/String.hashCode:()I<br>      94: invokevirtual #57                 // Method java/io/PrintStream.println:(I)V<br>      97: getstatic     #31                 // Field java/lang/System.out:Ljava/io/PrintStream;<br>     <span class="hljs-number">100</span>: aload         <span class="hljs-number">4</span><br>     102: invokevirtual #53                 // Method java/lang/String.hashCode:()I<br>     105: invokevirtual #57                 // Method java/io/PrintStream.println:(I)V<br>     108: ldc           #60                 // String Hello<br>     <span class="hljs-number">110</span>: astore        <span class="hljs-number">4</span><br>     <span class="hljs-number">112</span>: bipush        <span class="hljs-number">100</span><br>     <span class="hljs-number">114</span>: istore        <span class="hljs-number">5</span><br>     116: getstatic     #31                 // Field java/lang/System.out:Ljava/io/PrintStream;<br>     <span class="hljs-number">119</span>: iload         <span class="hljs-number">5</span><br>     121: invokevirtual #57                 // Method java/io/PrintStream.println:(I)V<br>     <span class="hljs-number">124</span>: <span class="hljs-keyword">return</span><br>&#125;<br></code></pre></div></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java Tools</tag>
      </tags>
  </entry>
  <entry>
    <title>Java多线程</title>
    <url>/2021/02/05/java%E5%A4%9A%E7%BA%BF%E7%A8%8B/</url>
    <content><![CDATA[<p><img src="/img/code.png" alt=""></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java多线程</tag>
      </tags>
  </entry>
  <entry>
    <title>optimization</title>
    <url>/2020/12/26/optimization/</url>
    <content><![CDATA[<h1 id="methods-of-optimization"><a href="#methods-of-optimization" class="headerlink" title="methods of optimization"></a>methods of optimization</h1><p><strong>作业 5.</strong> 设函数 $f:\mathbb{R}^n \to \mathbb{R}$ 连续二次可微，${x^k}$ 由某下降算法生成（即 $d^k$ 为下降方向），$\alpha_k$ 由Wolfe-Powell原则生成。已知 <script type="math/tex">x^k \to x^*</script>，并且 <script type="math/tex">\nabla f(x^*)=0,\nabla^2f(x^*)\mathbb{>}0</script>。令  </p>
<script type="math/tex; mode=display">
\delta_k := \frac{\Vert\nabla f(x^k)+\nabla^2f(x^k)d^k\Vert}{\Vert d^k \Vert}</script><p>如果 $\delta_k \to 0$，证明下述结论成立：<br>$\space$（1）当 $k$ 充分大时，必有步长 $\alpha_k=1;$<br>$\space$（2）序列 ${x^k}$ 超线性收敛。</p>
<blockquote>
<p>解答：（1）</p>
</blockquote>
]]></content>
      <categories>
        <category>计算数学</category>
        <category>运筹学</category>
        <category>数学</category>
      </categories>
      <tags>
        <tag>优化算法</tag>
        <tag>Hello</tag>
      </tags>
  </entry>
  <entry>
    <title>出走半生，归来仍是菜鸟</title>
    <url>/2021/01/23/runoob/</url>
    <content><![CDATA[<h2 id="燕雀安知鸿鹄之志，鸿鹄安知菜鸟之志"><a href="#燕雀安知鸿鹄之志，鸿鹄安知菜鸟之志" class="headerlink" title="燕雀安知鸿鹄之志，鸿鹄安知菜鸟之志"></a>燕雀安知鸿鹄之志，鸿鹄安知菜鸟之志</h2><h4 id="https-www-runoob-com"><a href="#https-www-runoob-com" class="headerlink" title="https://www.runoob.com/"></a><a href="https://www.runoob.com/">https://www.runoob.com/</a></h4>]]></content>
      <categories>
        <category>learn</category>
      </categories>
      <tags>
        <tag>runoob</tag>
      </tags>
  </entry>
  <entry>
    <title>test</title>
    <url>/2021/01/19/test/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="bd14afcb2e3561f040571a7db6bb757785342f29f92177b070477aaa0ffb650a">97e0dbde30c97b5c9b0d6b89e25836be46d8d59312712130d7c5a2620145cbb3a955c48d62387aed7a17b1f218509c72bed4635b25b1c5333223f8bf1ff7dd6d08d0d496fbcefa6bbe03269b2415263751822913eb9efdfec2e8a00abbcdec3bb726bdea78e69e7f6c1e41b97e703ff13d08a590bd18012b06d07149b726c338c26d747f0f33aa244107449017a8b9056b3d887f896ad19e721b8ebb62e491432d6a7ad0ce193a561b1844980329db4927153e2118d6eb431948319e4c5ea9587120ee2daa133b94656432e5daf9244c9ec0ae5e05afea482f508da410b290b221ada7fdab8561c1d4bed16a4d94b3bc289b92f525af4685b00c9956cf45bad1ee9fb04a09c36e6bea21d3f8c86eb76d40cb4277d150f7d4bc904facb1a3dceb7d4d447b6d35995dbadf6479ebc39cc0d4379a43ecd59f5bf8f4dbcc148e5eefc7e5c6127e262f4c197d4625778f154874004c8a8ce34688722cd9bc21933a0069123558a1ecd53b7052302eae409a0f3a6e31c27e37af9a7aca2295b4b0d179f127f6562b3048e412f627ea158c36c933e73e55ed982d8fca28501edd9478b63a76cb83d790a8f762d3c75121e367c6da5f80ff0d1518e42b5b247a7dd0e028eb08e03e1a1bb9e6a299ac76540ef1e7440a74d6834f7f7a168eb32ee17bc90b134eb2a70b19ca7a6191d07687addcc17cbb428699a66fff5ca7bc3fe522019c3a36dd9eb7c5c39e26d3bb94bf5fffe1f41977cbf1c40d9eff2f3a919fd8749c5e5756010b96af698892f53d91a475bc819e0f8916f2d6023fcfd4327508c0fe0c7325485bc310bbdd77135987cf928f4d8b81ac97c71004e56ccd6455049d410de6b6a72d4979b328e7fdef71fd166c5b303545c2a4f504bf60174fc94b798bcac71caf0536db68f6e03dbb77be94c2df72da6cc80646ee8fb5955263100cebcc687c10db508193c43d47656082d18b290286c3f2766c6a886822229591c32db0c6c5c7d59891448e18de1e77df7f7054b5f1f557b4f2979d2db6ae1d7d8d4408393d2dd59a571e20359301abcaadb7685d79c85bb2f48b06310338917c32cbc0db5221b51b3de0ae6f010667808d22483fb7fcc967aa2fa2b5b6bfd07ea14e87c8f5879182c1ee81f44e8aa204b7767e0d750ed58234f20bf1ab47445f57ae1fc81e49727cef41090f0ade1488cb896dba58797997c84530c7e335fe9e3623d7003891d66332918449623a35a5c4a18375ddb16836e0448f74385c9a12a69100e938c789cd41f4fbc880a24899a7cb7c9b363db3542e815df6c13c2800df22dbcfd09e57f2f9617755a8349b7b2bcbe4ef52cc191b25fd7db2a107a20b513cf52e2b6728e9630f6ca00542cbbeef3cf37f400081b1d0a46cf8359d4d6357af2bbce3670cecd07abe4541e4e5c05e038136159aa23d8d2cf18d829298d689483aaca8ea61effb7980f453658cb7c2c91c4f5fa12d28b9e7ce3c028884521bf70e84461b6e3340a9da13fc2287e14f3db89d82de2ca958bd2614bfb44cd84d84b4d19fd9180d11c986f0ea5de0b8d4ffda1bee56f3a344dcb013f33ec37f8f03e8479d234354d4abfe8a247fd823a71b368e47e53f7b337182cfb552ec17e14ade9f156ae5d228569381502e3b61f6baca751d2c74c59f674b65614713a7fd327416433233de601f7e7dc7a88043e7f22de1fb5a5b5963df75268d82de41513cc00aae1bad0aa3a243c0bfd8979d5f587c605b742a86aa6a9872f3f82e942af15b1c8f9dcdf93f72e37f6b39e59d7747bb2e7b8fd180e5968477ce99beccedc7c235c8eaeb2201e98edb61ba38e4955d2912448c090cd5df504b2ca51431145c28dc664010b63f751e08b0c1d75a26298e248e193aec95b7a0384450a5718cdb82e8e49f8370dca682a3dfdde48cc9295afb6415146440bb9754ab7b9d6c6fa64f463725bbb9a2484670efee8740f7f8cdce194becf8558356727dd6fa92cedb9a4418e2ab05929eea972020dd4f6afd21da96d47465cb1c67511d0ae7f2bfc005a0a8ace59ba4ae26eb30e2a973e4fc3a81e1e2cff0e31b89b17a5ea190119340fff9f94d6c75074f7d1323caa872447de5a50271fa9a2226da474eae2c31341f4c2a9adb961484d81a509181eaf095f8a06f5d42987b36839abbb36cd9f170a27fea25d7590f3d34ca03fa8bc3e853e2dd63d6f873da37db970eb6df1ccf61ea327de6c64d4b9e2b3dba548a12aac55da9df1cd3105e830e53055b9a08a147dc62696a1edcf5eb17ebd1e911cf85bb6d9c8aee3d5d660fe2283b8d8c5164e0ad73eec56110762194aedea6c34528894900929a1815f9643f879c6c85cfc6f0bd2747b438893c5810f89ad2944d8ddc5728fc0bf081057ed5af2dd9ce1be98bcc26944624eb714022ebc008244a5a21a3cb424ae810e7989277abd84f21227b08f05942933b5d571a6e614668437a0d6588458dbf3622c5c963fcd7daab789d0e90b8cd6639f8c324e1dc4692fa6fb583c2d442c28dde1dd85892fa11384e3893f052d894e13c562546118d579de7ec059a739b6676eb88da62133e66467d45d858b9263b2f3ca41230284bd405e639a726fa277d2a5e813b1d6578cbe29ca968ace20e9a2ea4dcbc29f10699c520f9229a6b05044bf0e960773afd2eda521c245c39076bd5bc87d77404c8eb77adcb1ddb1f27558d9e4f9c18668778aa020dc85b6e8f5d9e282208619f219a714ee8cdd182c99078a25549ed2228699360f68885c8c1b12c82828538a909be81b29f405cb696c3d37169124208ef29ed15ab004c23adbcd586a80071c4ad74dd6ea7fc86c8a102aeb7740e93c893d2fb16d3409c57a86e4cce0c2af0a21b0c95081aa81ed1254d3657b8eeb3571f7288359e508285cd3d8f2e84c58ce5d23bce02c409d4bc66a56fa63fcace8ec32020bca893544bf499caa7ae5f361a70ad9d7695709430a8a1b824212c1c1de2e4aab92ee7629367bd6ff6d78226865eaa48fc5754c51f0fc56c6ffd6630b0dbfb9ac902e9cdb4c12be7f647b0ef35d5f41e22b73da28beb0613b364fe72407d719005963d44d3bed7bad087ca5d2d74334eed107665af1dce557a3434ff91951b393e0072e6f35b1b2cb2d30b7af307407f641e999b5e538214bd46735a4545c88660a6b99da1f12de397d1720d39ba257ba5502e87cf4c9d84b85ae010bc05406fd97b7b9b40007c13f06ebb733dd5d8c1d824771fae59261ad84b8f30699c6468ef7ef43304e8e7b5eacd2603745459b6b6ab2ace3a8f4204d1d423fe92b526b6322545d584cf1b427ada8f6a3b25047753f9b922c56ca36610ad8e0fb3cc4478ee452a2ebb9aa5901fb3fba6998023d271a914c8b3c39f7b4b3235225f28f426b4a98b6e31cbb33a5e155a6d96d4595ab2ffe5824bdf4c458aaa1dd3b321cbedb53bec311c2048830e664b5262de058ee6f03e9e930a7305bf72187beda03e131cd6279358c74a320e2655eda641b53919a061ec0e982def5b201ca82b0cd0ec6e2a10faefaf0d2b6b60b17a8d1c3b3bf4623adfd5521d5b11406e4d993c0da5d4d31ac3eb5d82fa04df17f47c3fc968276b0c443004248392bd9babd4273c1e01f53c13036af321b9dea394cad4c84e89889ba9c27f9c727f0812c62ff3311e06a6975dff61480cb87a0a22fa278c33af7b1c8b8da0e5a2b8e01210bd5047b7062c1a8e5ee561e899514913e1938d742c18a298290d5efefb2e1ecc389d73e7fbeb0d3b96558a545a840faa564b5dedb2a5b66a540edb843cc0c38960f87ed68f59975c8fdf1f56ce5da545da66b2fcb8acf05e1e66b2dd041103008580aa7959a4ac104c06a012c5abc2214d4c56e19ec6a3d5d910b69b27cca4270f4884533f95b0e55b65766a3da514b3cf40435df7fc5db55c713cd0818cea7b336e93d2acb5478920c6b4f0af45e89d472d7bba0a743a9a404dd0f451d93d825caad6292fd0ef1ae48d9a99b2556cdc6eb2dbfc5174c0dc8e3f9be4e28e592f919c59464ec3ead81b8ea08217e73aee21bcedca84901cb7a7d14cd8f96e09f497dd49ece8cf27f8564dcded1b1e5f42ec44fad2bb6af6293ec7dbf74f3ba424a6e3b756592553288e99a846ed5e00c87a6a69e150768b4ffef90dc420571015321ae7f7a062e9478542d2fe1cf60135bc07c19942645ed5a11a293e3893311c0b0e572128f829e1636dc5367e493f2ac3cbe2784cea8de9ef31a690d3dfbe27fea1463f48b83d20b79acd82ef61e0a7b387b7a2a9ce3def54b0b16871352ecdeffaaec7b4a687377c13f5a91f3bc1ac8e72a9b4f0b2455ad75ad5a1444758903d1410676fadb86a9299fa930c31fc08545878d751e9c2441ea7af56ff482c2eed14eb75795bedd24926f596426e11711417fc7bf7d889114f9cc1ea7ae3f337fb1fabcaade518572b6244490910f0d0d54b71986a5beb748f395cfc532e4147047d503efba00c9ce1fb1dfc2239bd2638935f7fcf13d385a9022a61d50c07331df1107ce0d7fd2f830036412bb722edb99316534e78cd70734893cd92da78a85edc11e2819e662561d93d6285066b854a963e5e9a81605c10a1e3654a9f64649d34ac46ec3f643e004ac58c92513b15897ee631d427dd5f134d2ee972a764233827e505a9d5c2b6f99f3f15fdd2eacf802ad7189bef4caa391aaa43ffe37180b23f84580d1f016959c271a75dc918d6d6f95f35848e1c834e9176e65ed05040a12e1547cea747301fde827c7fc1e453c1d923a50974a4e85d7e1a689f490ab84727c3d45cb1b5f14a44d81f815ec940771c0a9de2db9ca987539c5368a19ec64f88e5c7f82993f1b2176685fa712b17035e51df3fb2f46aced10f48a61d57a77a27c6c53d8205281a047c7bbdb73d14a0c337797f2dbb6bddedda33d1970192a2009cfc558142b50276286efbd5fa8ced0c0dc2fc3cdbc82dc976486a185b29624d445b55d5a45afc309f4fa6ee60aef8031624531189b2f6e1ba2c9aadb31c14af9e37c6da71c2179523544dfacd23037ab1b900f7ed1a9576cc0f3e804cc1c48a14da302711781c13dafc95d2b5986d8626ac9f42f05fa55d4f61ac7f40d2d88c1512233ee2566d4f1007a4e9a22a61f25d2d0c1afd8969001ddbb423780fa45b7bc8403ba67d482d8b34bfe60e3799033297fb829de11527398d9395c344b7db672b7c6adf7a60ea199f1f1ba8a1902e5fe9cc6dd1793d6bb44c585016718794061c80d2332c35a115cb730458ea45280ddb88effdbdb8028237f14dd8a8c10377f239d93090b553c8d7cb90e644f655721a0ad9e3b801fd2eb229318d9c02dc478215603929fd3974e5c29d8a760573157308a5c0af1e7eab2ab5b885aa713ed94fca2baa0ed9b706e9240436ebb714c27c07bb</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>
      </label>
    </div>
  </div>
</div>
<script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>作为日记加密</tag>
        <tag>数值代数</tag>
      </tags>
  </entry>
  <entry>
    <title>全排列输出（主流语言递归实现）</title>
    <url>/2021/02/27/whole-arrangement/</url>
    <content><![CDATA[<blockquote>
<p><a href="https://code.visualstudio.com/">vscode</a>是一个外表很高冷的姑娘，你需要对她投入很多，她才会慢慢接纳你。她是一个善良却保守的姑娘，每一次你提出新要求时，都需要折腾折腾她一波，她才能同意你。</p>
</blockquote>
<p><img src="/img/vscode.png" alt="推荐使用vscode写代码，强大的插件生态给你飞一样地体验！"></p>
<p><img src="/img/pailie.jpeg" alt="递归图解"><br><figure class="highlight c"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C"><span class="hljs-comment">// C Call</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span><br><br><span class="hljs-keyword">int</span> num = <span class="hljs-number">0</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">swap</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *a, <span class="hljs-keyword">char</span> *b)</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-keyword">char</span> temp = *a;<br>  *a = *b;<br>  *b = temp;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">whole_arrangement</span><span class="hljs-params">(<span class="hljs-keyword">char</span> ch[], <span class="hljs-keyword">int</span> k, <span class="hljs-keyword">int</span> len)</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-keyword">int</span> i;<br>  <span class="hljs-keyword">if</span> (k == len)<br>  &#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>, ch);<br>    num++;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;, &quot;</span>);<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br>  <span class="hljs-keyword">else</span><br>  &#123;<br>    <span class="hljs-keyword">for</span> (i = k; i &lt;= len; i++)<br>    &#123;<br>      swap(&amp;ch[k], &amp;ch[i]);<br>      whole_arrangement(ch, k + <span class="hljs-number">1</span>, len);<br>      swap(&amp;ch[k], &amp;ch[i]);<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-keyword">char</span> ch[] = <span class="hljs-string">&quot;abc&quot;</span>;<br>  whole_arrangement(ch, <span class="hljs-number">0</span>, <span class="hljs-built_in">strlen</span>(ch) - <span class="hljs-number">1</span>);<br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nCOUNT: %d\n&quot;</span>, num);<br>  system(<span class="hljs-string">&quot;pause&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><br><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-comment">// Java Call</span><br><span class="hljs-comment">// Main.java</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>    String ch = <span class="hljs-string">&quot;abc&quot;</span>;<br>    wholeArrangement(ch.toCharArray(), <span class="hljs-number">0</span>);<br><br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">wholeArrangement</span><span class="hljs-params">(<span class="hljs-keyword">char</span>[] ch, <span class="hljs-keyword">int</span> k)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">if</span> (k == ch.length - <span class="hljs-number">1</span>) &#123;<br>      System.out.print(ch);<br>      System.out.print(<span class="hljs-string">&quot;, &quot;</span>);<br>      <span class="hljs-keyword">return</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">for</span> (i = k; i &lt;= ch.length - <span class="hljs-number">1</span>; i++) &#123;<br>        <span class="hljs-keyword">char</span> temp = ch[k];<br>        ch[k] = ch[i];<br>        ch[i] = temp;<br>        wholeArrangement(ch, k + <span class="hljs-number">1</span>);<br>        temp = ch[k];<br>        ch[k] = ch[i];<br>        ch[i] = temp;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><br><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># python Call</span><br><span class="hljs-keyword">from</span> typing <span class="hljs-keyword">import</span> List<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">whole_arrangement</span>(<span class="hljs-params">ch: List[<span class="hljs-built_in">str</span>], k: <span class="hljs-built_in">int</span></span>) -&gt; <span class="hljs-keyword">None</span>:</span><br>    <span class="hljs-keyword">if</span> k == <span class="hljs-built_in">len</span>(ch):<br>        print(<span class="hljs-string">&quot;&quot;</span>.join(ch), end=<span class="hljs-string">&#x27;&#x27;</span>)<br>        print(<span class="hljs-string">&quot;, &quot;</span>, end=<span class="hljs-string">&#x27;&#x27;</span>)<br>        <span class="hljs-keyword">return</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(k, <span class="hljs-built_in">len</span>(ch)):<br>            temp = ch[k]<br>            ch[k] = ch[i]<br>            ch[i] = temp<br>            whole_arrangement(ch, k+<span class="hljs-number">1</span>)<br>            temp = ch[k]<br>            ch[k] = ch[i]<br>            ch[i] = temp<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>() -&gt; <span class="hljs-keyword">None</span>:</span><br>    ch = <span class="hljs-string">&quot;abcde&quot;</span><br>    whole_arrangement(<span class="hljs-built_in">list</span>(ch), <span class="hljs-number">0</span>)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    main()<br></code></pre></div></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>C</category>
      </categories>
      <tags>
        <tag>C</tag>
        <tag>Algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenCV打开不存在的RTSP视频流超时的解决方案</title>
    <url>/2021/03/27/%E5%85%B3%E4%BA%8Eopencv%E6%89%93%E5%BC%80%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84rtsp%E8%A7%86%E9%A2%91%E6%B5%81%E5%9C%B0%E5%9D%80%E8%B6%85%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<blockquote>
<p>在我们使用OpenCV计算机开源视觉库去处理视屏流(rtsp, rtmp…)时，我们发现如果去实例化一个不存在的<code>RTSP</code>视屏流地址，会发生超时的问题，而且这个实例化线程是原子阻塞的，无法强制退出，这在某些场景下是不能被接受的，所以我们必须采取一定的方案去限定<code>cv2.VideoCapture(rtsp)</code>实例化的时间，经过多番探索，我发现用自定义多线程和装饰器可以解决这个问题，代码如下：</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># opencv_demo.py</span><br><span class="hljs-comment"># OpenCV-Python timeout for opening a non-existent RTSP video stream</span><br><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> threading<br>TIME_LIMITED: <span class="hljs-built_in">int</span> = <span class="hljs-number">1</span><br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyThread</span>(<span class="hljs-params">threading.Thread</span>):</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, target, args=(<span class="hljs-params"></span>)</span>):</span><br>        <span class="hljs-built_in">super</span>(MyThread, self).__init__()<br>        self.func = target<br>        self.args = args<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">run</span>(<span class="hljs-params">self</span>):</span><br>        self.result = self.func(*self.args)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_result</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">return</span> self.result<br>        <span class="hljs-keyword">except</span> Exception:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><br><span class="hljs-comment"># Decorator to limit the actual request time or function execution time</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">limit_decor</span>(<span class="hljs-params">limit_time</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    :param limit_time: Set the maximum allowable execution time, unit: second</span><br><span class="hljs-string">    :return: Untimed returns the value of the decorated function; timed out returns None</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">functions</span>(<span class="hljs-params">func</span>):</span><br>        <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">run</span>(<span class="hljs-params">*params</span>):</span><br>            thre_func = MyThread(target=func, args=params)<br>            <span class="hljs-comment"># The thread method terminates when the main thread terminates (exceeds its length)</span><br>            thre_func.setDaemon(<span class="hljs-literal">True</span>)<br>            thre_func.start()<br>            <span class="hljs-comment"># Count the number of segmental slumbers</span><br>            sleep_num = <span class="hljs-built_in">int</span>(limit_time // <span class="hljs-number">1</span>)<br>            sleep_nums = <span class="hljs-built_in">round</span>(limit_time % <span class="hljs-number">1</span>, <span class="hljs-number">1</span>)<br>            <span class="hljs-comment"># Sleep briefly several times and try to get the return value</span><br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(sleep_num):<br>                time.sleep(<span class="hljs-number">1</span>)<br>                infor = thre_func.get_result()<br>                <span class="hljs-keyword">if</span> infor:<br>                    <span class="hljs-keyword">return</span> infor<br>            time.sleep(sleep_nums)<br>            <span class="hljs-comment"># Final return value (whether or not the thread has terminated)</span><br>            <span class="hljs-keyword">if</span> thre_func.get_result():<br>                <span class="hljs-keyword">return</span> thre_func.get_result()<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">return</span> (<span class="hljs-literal">False</span>, <span class="hljs-literal">None</span>)  <span class="hljs-comment"># Timeout returns can be customized</span><br><br>        <span class="hljs-keyword">return</span> run<br><br>    <span class="hljs-keyword">return</span> functions<br><br><br><span class="hljs-meta">@limit_decor(<span class="hljs-params">TIME_LIMITED</span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">video_capture_open</span>(<span class="hljs-params">rtsp</span>):</span><br>    capture = cv2.VideoCapture(rtsp)<br>    <span class="hljs-keyword">return</span> (<span class="hljs-literal">True</span>, capture)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">frame_get</span>(<span class="hljs-params">rtsp</span>):</span><br>    <span class="hljs-keyword">try</span>:<br>        cap_status, cap = video_capture_open(rtsp)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> cap_status:<br>            print(cap_status, cap)<br>            <span class="hljs-keyword">return</span> cap<br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            ret, image_frame = cap.read()<br>            cv2.imshow(<span class="hljs-string">&quot;res&quot;</span>, image_frame)<br>            cv2.waitKey(<span class="hljs-number">3</span>)<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> ret:<br>                <span class="hljs-keyword">continue</span><br>            image = cv2.imencode(<span class="hljs-string">&#x27;.png&#x27;</span>, image_frame)[<span class="hljs-number">1</span>]<br>            image_base64_data = <span class="hljs-built_in">str</span>(base64.b64encode(image))[<span class="hljs-number">2</span>:-<span class="hljs-number">1</span>]<br>            <span class="hljs-keyword">return</span> image_base64_data<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> err:<br>        print(err)<br>        <span class="hljs-keyword">pass</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>() -&gt; <span class="hljs-keyword">None</span>:</span><br><br>    RTSP = <span class="hljs-string">&#x27;rtsp://192.168.3.88/av0_0&#x27;</span> <span class="hljs-comment"># No existing RTSP video stream address</span><br>    result = frame_get(RTSP)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> result:<br>        print(<span class="hljs-string">&quot;Failed to open RTSP stream&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        print(result[:<span class="hljs-number">10</span>])<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    main()<br></code></pre></div></td></tr></table></figure>
<blockquote>
<p>测试结果</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">python opencv_demo.py<br>False None<br>Failed to open RTSP stream<br></code></pre></div></td></tr></table></figure>]]></content>
      <categories>
        <category>python</category>
        <category>opencv</category>
      </categories>
      <tags>
        <tag>opencv-issue</tag>
      </tags>
  </entry>
  <entry>
    <title>栈的递归操作</title>
    <url>/2021/03/12/%E6%A0%88%E7%9A%84%E9%80%92%E5%BD%92%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<p><img src="/img/q.png" alt="The problem"><br><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-comment">// App.java</span><br><span class="hljs-keyword">import</span> java.util.Random;<br><span class="hljs-keyword">import</span> java.util.Stack;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;Hello Stack !&quot;</span>);<br>        Stack&lt;Integer&gt; s = <span class="hljs-keyword">new</span> Stack&lt;Integer&gt;();<br>        <span class="hljs-keyword">int</span> threshold = <span class="hljs-number">55</span>;<br>        Random r = <span class="hljs-keyword">new</span> Random(); <span class="hljs-comment">// Create a new random number generator</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">10</span>; i++) &#123;<br>            s.push(r.nextInt(<span class="hljs-number">100</span>)); <span class="hljs-comment">// 100 is the upper bound on the random number</span><br>        &#125;<br>        System.out.println(<span class="hljs-string">&quot;threshold: &quot;</span> + threshold);<br>        System.out.println(<span class="hljs-string">&quot;stack: &quot;</span> + s.toString());<br><br>        <span class="hljs-keyword">int</span> removeCount = removeAll(s, threshold);<br>        System.out.println(<span class="hljs-string">&quot;remove count: &quot;</span> + removeCount);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">removeAll</span><span class="hljs-params">(Stack&lt;Integer&gt; s, <span class="hljs-keyword">int</span> threshold)</span> </span>&#123;<br>        <span class="hljs-keyword">int</span> topData = s.pop();<br><br>        <span class="hljs-keyword">if</span> (s.isEmpty()) &#123;<br>            <span class="hljs-keyword">if</span> (topData &gt; threshold) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                s.push(topData);<br>                <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">int</span> count = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">if</span> (topData &gt; threshold) &#123;<br>                <span class="hljs-keyword">return</span> removeAll(s, threshold) + <span class="hljs-number">1</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                count += removeAll(s, threshold);<br>                s.push(topData);<br>                System.out.println(s.toString());<br>                <span class="hljs-keyword">return</span> count;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><br><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">xiang@iMac MINGW64 ~/Desktop/mid2<br><span class="hljs-meta">$</span><span class="bash"> javac App.java</span><br><br>xiang@iMac MINGW64 ~/Desktop/mid2<br><span class="hljs-meta">$</span><span class="bash"> java App</span><br>Hello Stack !<br>threshold: 55<br>stack: [67, 64, 33, 13, 74, 72, 22, 22, 18, 72]<br>[33]<br>[33, 13]<br>[33, 13, 22]<br>[33, 13, 22, 22]<br>[33, 13, 22, 22, 18]<br>remove count: 5<br></code></pre></div></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java数据结构</tag>
      </tags>
  </entry>
</search>
